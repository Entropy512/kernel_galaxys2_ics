#ifndef __MDNIE_DMB_H__
#define __MDNIE_DMB_H__

#include "mdnie.h"

static const unsigned short tune_dmb_normal_indoor[] = {
	/* start */
	0x0001, 0x0041,	/* PCC 40 */
	0x002c, 0x003C,	/* DNR bypass 0x003C */
	0x002d, 0x1508,	/* DNR bypass 0x0a08 */
	0x002e, 0x1005,	/* DNR bypass 0x1010 */
	0x002f, 0x0400,	/* DNR bypass 0x0400 */
	0x003A, 0x000D,	/* HDTR DE CS  de on = d , de off = 9 */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7a00,	/* 7300 */
	0x004b, 0x008F,	/* 008f */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dmb_normal_outdoor[] = {
	/* start */
	0x0001, 0x0002,	/* OVE */
	0x002c, 0x0fff,	/* DNR bypass 0x003C */
	0x002d, 0x1900,	/* DNR bypass 0x0a08 */
	0x002e, 0x0000,	/* DNR bypass 0x1010 */
	0x002f, 0x0fff,	/* DNR bypass 0x0400 */
	0x003A, 0x0009,	/* HDTR DE CS */
	0x003B, 0x03ff,	/* DE SHARPNESS */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x003F, 0x00c8,	/* CS GAIN */
	0x0042, 0x0020,	/* DE TH (MAX DIFF) */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7300,
	0x004b, 0x008f,
	0x0054, 0x5a50,	/* ove */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dmb_warm_indoor[] = {
	/* start */
	0x0001, 0x0045,	/* SCR MCM PCC */
	0x002c, 0x003c,	/* DNR bypass 0x003C */
	0x002d, 0x1508,	/* DNR bypass 0x0a08 */
	0x002e, 0x1005,	/* DNR bypass 0x1010 */
	0x002f, 0x0400,	/* DNR bypass 0x0400 */
	0x003A, 0x000d,	/* HDTR DE CS */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7300,
	0x004b, 0x008f,
	0x005b, 0x0064,	/* MCM */
	0x0063, 0x7000,	/* cb */
	0x0065, 0x0090,	/* cr */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dmb_warm_outdoor[] = {
	/* start */
	0x0001, 0x0006,	/* MCM PCC */
	0x002c, 0x003c,	/* DNR bypass 0x003C */
	0x002d, 0x1508,	/* DNR bypass 0x0a08 */
	0x002e, 0x1005,	/* DNR bypass 0x1010 */
	0x002f, 0x0400,	/* DNR bypass 0x0400 */
	0x003A, 0x000d,	/* HDTR DE CS */
	0x003B, 0x03ff,	/* DE SHARPNESS */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x003F, 0x0100,	/* CS GAIN : 256 */
	0x0042, 0x003f,	/* DE TH (MAX DIFF) */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7300,
	0x004b, 0x008f,
	0x0054, 0x5a50,	/* OVE */
	0x005b, 0x0064,	/* MCM */
	0x0063, 0x7000,	/* cb */
	0x0065, 0x0090,	/* cr */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dmb_cold_indoor[] = {
	/* start */
	0x0001, 0x0045,	/* MCM PCC */
	0x002c, 0x003C,	/* DNR bypass 0x003C */
	0x002d, 0x1508,	/* DNR bypass 0x0a08 */
	0x002e, 0x1005,	/* DNR bypass 0x1010 */
	0x002f, 0x0400,	/* DNR bypass 0x0400 */
	0x003A, 0x000D,	/* HDTR DE CS */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7300,
	0x004b, 0x008f,
	0x005b, 0x0064,	/* MCM */
	0x0063, 0x9000,	/* cb */
	0x0065, 0x0070,	/* cr */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dmb_cold_outdoor[] = {
	/* start */
	0x0001, 0x0006,	/* MCM OVE */
	0x002c, 0x003c,	/* DNR bypass 0x003C */
	0x002d, 0x1508,	/* DNR bypass 0x0a08 */
	0x002e, 0x1005,	/* DNR bypass 0x1010 */
	0x002f, 0x0400,	/* DNR bypass 0x0400 */
	0x003A, 0x000D,	/* HDTR DE CS */
	0x003B, 0x03ff,	/* DE SHARPNESS */
	0x003C, 0x0000,	/* NOISE LEVEL */
	0x003F, 0x0100,	/* CS GAIN : 300 */
	0x0042, 0x003f,	/* DE TH (MAX DIFF) */
	0x0049, 0x0400,	/* pcc skin */
	0x004a, 0x7300,	/* cb */
	0x004b, 0x008f,	/* cr */
	0x0054, 0x5a50,	/* OVE */
	0x005b, 0x0064,	/* MCM */
	0x0063, 0x9000,	/* cb */
	0x0065, 0x0070,	/* cr */
	0x0028, 0x0000,	/* Register Mask */
	/* end */
	END_SEQ, 0x0000,
};

static const unsigned short tune_dynamic_dmb[] = {
	/* start M0 dynamic dmb */
	0x0000, 0x0000,
	0x0008, 0x008e,
	0x0030, 0x0005,
	0x0039, 0x0040,
	0x0080, 0x0fff,
	0x0081, 0x1908,
	0x0082, 0x0809,
	0x0083, 0x0000,
	0x0092, 0x00e0,
	0x0093, 0x00e0,
	0x0094, 0x00e0,
	0x0095, 0x00e0,
	0x0096, 0x00e0,
	0x0097, 0x00e0,
	0x0098, 0x1000,
	0x0099, 0x0010,
	0x00b0, 0x0808,
	0x00b1, 0x1010,
	0x00b2, 0x1010,
	0x00b3, 0x2804,
	0x0000, 0x0001,
	0x001f, 0x0080,
	0x0020, 0x0000,
	0x0021, 0x0d93,
	0x0022, 0x1aa5,
	0x0023, 0x29b7,
	0x0024, 0x39c8,
	0x0025, 0x4bd8,
	0x0026, 0x5de6,
	0x0027, 0x6ff4,
	0x0028, 0x81ff,
	0x00ff, 0x0000,
	END_SEQ, 0x0000,
};

static const unsigned short tune_standard_dmb[] = {
	/* start M0 standard dmb */
	0x0000, 0x0000,
	0x0008, 0x000e,
	0x0030, 0x0005,
	0x0039, 0x0040,
	0x0080, 0x0fff,
	0x0081, 0x1908,
	0x0082, 0x0809,
	0x0083, 0x0000,
	0x0092, 0x00c0,
	0x0093, 0x00c0,
	0x0094, 0x00c0,
	0x0095, 0x00c0,
	0x0096, 0x00c0,
	0x0097, 0x00c0,
	0x0098, 0x1000,
	0x0099, 0x0010,
	0x00b0, 0x0a0a,
	0x00b1, 0x1010,
	0x00b2, 0x1010,
	0x00b3, 0x2004,
	0x00ff, 0x0000,
	END_SEQ, 0x0000,
};

static const unsigned short tune_movie_dmb[] = {
	/* start M0 movie dmb */
	0x0000, 0x0000,
	0x0008, 0x002e,
	0x0030, 0x0005,
	0x0039, 0x0040,
	0x0080, 0x0fff,
	0x0081, 0x1908,
	0x0082, 0x0809,
	0x0083, 0x0000,
	0x0092, 0x0040,
	0x0093, 0x0040,
	0x0094, 0x0040,
	0x0095, 0x0040,
	0x0096, 0x0040,
	0x0097, 0x0040,
	0x0098, 0x1000,
	0x0099, 0x0010,
	0x00b0, 0x1010,
	0x00b1, 0x1010,
	0x00b2, 0x1010,
	0x00b3, 0x1204,
	0x00e1, 0xd6ac,
	0x00e2, 0x32ff,
	0x00e3, 0x2ef0,
	0x00e4, 0xa5fa,
	0x00e5, 0xff4d,
	0x00e6, 0x59ff,
	0x00e7, 0x00ff,
	0x00e8, 0x00fb,
	0x00e9, 0xff61,
	0x00ea, 0x00ff,
	0x00eb, 0x00f8,
	0x00ec, 0x00f1,
	0x00ff, 0x0000,
	END_SEQ, 0x0000,
};

static const unsigned short tune_natural_dmb[] = {
	/* start M0 natural dmb */
	0x0000, 0x0000,
	0x0008, 0x002e,
	0x0030, 0x0005,
	0x0039, 0x0040,
	0x0080, 0x0fff,
	0x0081, 0x1908,
	0x0082, 0x0809,
	0x0083, 0x0000,
	0x0092, 0x00c0,
	0x0093, 0x00c0,
	0x0094, 0x00c0,
	0x0095, 0x00c0,
	0x0096, 0x00c0,
	0x0097, 0x00c0,
	0x0098, 0x1000,
	0x0099, 0x0010,
	0x00b0, 0x1010,
	0x00b1, 0x1010,
	0x00b2, 0x1010,
	0x00b3, 0x1804,
	0x00e1, 0xd6ac,
	0x00e2, 0x32ff,
	0x00e3, 0x2ef0,
	0x00e4, 0xa5fa,
	0x00e5, 0xff4d,
	0x00e6, 0x59ff,
	0x00e7, 0x00ff,
	0x00e8, 0x00fb,
	0x00e9, 0xff61,
	0x00ea, 0x00ff,
	0x00eb, 0x00fa,
	0x00ec, 0x00f8,
	0x00ff, 0x0000,
	END_SEQ, 0x0000,
};

struct mdnie_tunning_info tune_dmb[2][3] = {
	{
		{"DMB_INDOOR_MODE",	tune_dmb_normal_indoor},
		{"DMB_WARM_INDOOR_MODE",	tune_dmb_warm_indoor},
		{"DMB_COLD_INDOOR_MODE",	tune_dmb_cold_indoor}
	},
	{
		{"DMB_OUTDOOR_MODE",	tune_dmb_normal_outdoor},
		{"DMB_WARM_OUTDOOR_MODE",	tune_dmb_warm_outdoor},
		{"DMB_COLD_OUTDOOR_MODE",	tune_dmb_cold_outdoor}
	},
};

struct mdnie_tunning_info tune_ics_dmb[MODE_MAX] = { /* For Mo Device */
	{"DYNAMIC_DMB",    tune_dynamic_dmb },
	{"STANDARD_DMB",   tune_standard_dmb},
	{"MOVIE_DMB",      tune_movie_dmb   },
	{"NATURAL_DMB",    tune_natural_dmb },
};
#endif /* __MDNIE_DMB_H__ */
